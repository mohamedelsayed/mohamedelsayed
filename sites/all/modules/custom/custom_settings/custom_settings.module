<?php

/**
 * @author Author "Elsayed Ellabad"  
 * @author Author Email "ellabadfci@yahoo.com"
 * @link 
 * @copyright Copyright (c) 2016 Programming
 */

function custom_settings_init() {
}

function custom_settings_menu() {
    $items['admin/custom/custom-settings/add'] = array(
        'title' => 'Create New Setting',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('custom_settings_add_form'),        
        'access arguments' => array('access content'),
        'weight' => -14,
    );    
    $items['admin/custom/custom-settings/%/edit'] = array(
        'title' => 'Edit Custom setting',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('custom_settings_edit_form',3),
        'access arguments' => array('access content'),
        'weight' => -14,
    );    
    $items['admin/custom/custom-settings/%/delete'] = array(
        'title' => 'Delete Project',
        'page callback' => 'custom_settings_delete',
        'page argument' => array(3),
        'access arguments' => array('access content'),
        'weight' => -14,
    );
    
    $items['admin/custom/custom-settings'] = array(
        'title' => 'Custom Settings',
        'page callback' => 'custom_settings_with_pager_content',
        'access arguments' => array('access content'),
        'weight' => -14,
    );
    return $items;
}
/*
* Draw adding new custom settings form
*/
function custom_settings_add_form($form, &$form_state) {
    $form['key_data'] = array(
        '#type' => 'textfield',
        '#maxlength' => 250,
        '#title' => 'Key',
        '#required' => TRUE,
    );
    $form['value'] = array(
        '#type' => 'textfield',
        '#maxlength' => 250,        
        '#title' => 'Value',
        '#required' => TRUE,
    );
    $form['description'] = array(
        '#type' => 'textarea',              
        '#title' => 'Description',
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save'),
    );
    
    $form['#validate'][] = 'custom_settings_validate_key';
    $form['#submit'][] = 'custom_settings_save_new';
    return $form;
   
}
/*
* Handle adding new custom settings
*/
function custom_settings_save_new($form, &$form_state) {
    global $base_url;
    $key_data = trim($form_state['input']['key_data']);
    $key = ellabad_slugify($key_data);
    $value = trim($form_state['input']['value']);
    $description = trim($form_state['input']['description']);

    $setting_id = db_insert('custom_settings')
        ->fields(array(
            'key_data' => $key,
            'value' => $value,
            'description' => $description,
            'created' => time(),
            'updated' => time(),

        ))->execute();
    drupal_set_message(t('New setting has been added!'));
    drupal_goto($base_url."/admin/custom/custom-settings");
}
/*
* Validate key when adding new setting
*/
function custom_settings_validate_key($form, &$form_state) {
    $key_data = $form_state['input']['key_data'];
    $key = ellabad_slugify($key_data);
    $result = db_query('SELECT * FROM {custom_settings} WHERE (key_data= :key_data) ', array(':key_data' => $key))->fetchObject();
    //update 
    if (!empty($result)) {
        form_set_error('key_data', 'This key already exist');
    }
}

/* 
* Drawing Edit form of custom settings
*/
function custom_settings_edit_form($form, &$form_state) {
    $id = arg(3);
    $result = db_query('SELECT * FROM {custom_settings} WHERE id = :id', array(':id' => $id))->fetchObject();

    $form['key_data'] = array(
        '#type' => 'textfield',
        '#maxlength' => 250,
        '#title' => 'Key',
        '#value' => $result->key_data,
        '#attributes' => array('readonly' => 'readonly')   
    );
    $form['value'] = array(
        '#type' => 'textfield',
        '#title' => 'Value',
        '#value' => $result->value,
        '#required' => TRUE,
    );
    $form['description'] = array(
        '#type' => 'textarea',              
        '#title' => 'Description',
        '#value' => $result->description,
    );
    
    $form['id'] = array(
        '#type' => 'hidden',
        '#value' => $id,
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save'),
    );
    $form['#submit'][] = 'custom_settings_edit_handler';
    return $form;
}

function custom_settings_edit_handler($form, &$form_state) { 
    global $base_url;
    $custom_setting_id = $form_state['input']['id'];    
    $key = $form_state['input']['key_data'];
    $value = $form_state['input']['value'];
    $description = $form_state['input']['description'];

    $result = db_update('custom_settings')
            ->fields(array('value' => $value, 'description' => $description, 'updated' => time()))
            ->condition('id', $custom_setting_id, '=')
            ->execute();
    
    drupal_set_message(t('Custom setting has been updated!'));
    drupal_goto($base_url."/admin/custom/custom-settings");
}
/*
* Handle delete of custom setting
*/
function custom_settings_delete() {
    $id = arg(3);
    global $base_url;
    if(is_numeric($id)){
        $num_deleted = db_delete('custom_settings')
                ->condition('id', $id)
                ->execute();
        drupal_set_message(t('Custom setting has been deleted!'));
        drupal_goto($base_url."/admin/custom/custom-settings");
    } else {
        return "Some error occur";
    }
}
/*
* Handle listing of custom settings
*/
function custom_settings_with_pager_content() {
    
    $header = array(
        array('data' => t('Id'), 'field' => 'id', 'sort' => 'desc'),
        array('data' => t('Key'), 'field' => 'id', 'sort' => 'desc'),
        array('data' => t('Value'), 'field' => 'id', 'sort' => 'desc'),
        array('data' => t('Updated'), 'field' => 'id', 'sort' => 'desc'),
        array('data' => t('Operations')),
    );
    $query = db_select('custom_settings', 'cs');
    $query->fields('cs', array('id', 'key_data', 'value', 'updated'));
    $table_sort = $query->extend('TableSort')
            ->orderByHeader($header);
    $pager = $table_sort->extend('PagerDefault')
            ->limit(20);
    $result = $pager->execute();
    $rows = array();
    global $base_url;
    $output = '<ul class="action-links"><li><a href="'.$base_url.'/admin/custom/custom-settings/add">Add new</a></li></ul>';
    foreach ($result as $res) {

        $rows[] = array($res->id, "<span class='wrap-title'>" . $res->key_data . "</span>", $res->value, date('d M Y',$res->updated), "<a href='".$base_url."/admin/custom/custom-settings/".$res->id."/edit'>Edit</a> | <a href='".$base_url."/admin/custom/custom-settings/".$res->id."/delete' onclick='return confirm(\"Are you sure?\")'>Delete</a>");
    }
    if (!empty($rows)) {
        $output .= theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('id' => 'sort-table')));
        $output .= theme('pager');
    } else {
        $output .= t("No results found.");
    }

    return $output;
}
/*
* create custom_settings table
*/
function custom_settings_update_7105() {
    $schema= array(
        'description' => 'The base table for custom_settings.',
        'fields' => array(
            'id' => array(
                'type' => 'serial',
                'unsigned' => TRUE,
                'not null' => TRUE,
            ),
            'key_data' => array(
                 'type' => 'varchar',
                 'length' => 255,
                 'not null' => FALSE,
                 'default' => '',
            ),
            'value' => array(
                 'type' => 'varchar',
                 'length' => 255,
                 'not null' => FALSE,
                 'default' => '',
            ),          
            'description' => array(
                'type' => 'text',
                'not null' => FALSE,
            ),
            'created' => array(
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => '0',
            ),
            'updated' => array(
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => '0',
            ),
        ),
        'primary key' => array('id'),
    );
    db_create_table('custom_settings', $schema);  
}

function custom_settings_get_all() {
    $custom_settings = array();
    $custom_settings_data =  db_query('SELECT * FROM {custom_settings}')->fetchALL();
    if(!empty($custom_settings_data)) {
        foreach ($custom_settings_data as $no => $custom_setting) {
            $key = $custom_setting->key_data;
            $custom_settings[$key] = $custom_setting->value ;
        }
    }       
    return $custom_settings;
}